}
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = paste("Bias, ", expression(gamma), sep = ''))
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, main = paste("Bias, ", expression(gamma), sep = ''))
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(gamma))#paste("Bias, ", expression(gamma), sep = ''))
legend_title = paste("Bias, ", expression(gamma), sep = '')
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = legend_title)
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(Bias, gamma))
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(Bias gamma))
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(Bias[gamma]))
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression("Bias,"gamma))
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(gamma))
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(-0.05, 0.15), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n direct effect"))
title(xlab = "Time (years)", ylab = expression(Delta[DE](t)), line = 2.25, cex.lab = 1.1)
for(j in 2:11){
now_col[j] = getcolor(now_gamma[j])
lines(now_effect[[j]]$time/365.25, now_effect[[j]]$effect, type = 's', col = now_col[j])
}
legend_title = paste("Bias, ", expression(gamma), sep = '')
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(gamma))
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(gamma), ncol = 2)
now_col = rep(0, 11)
now_gamma = result$DE$sensitivity_analysis[[i]]$gamma
now_effect = result$DE$sensitivity_analysis[[i]]$effect
now_col[1] = getcolor(now_gamma[1])
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(-0.05, 0.15), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n direct effect"))
title(xlab = "Time (years)", ylab = expression(Delta[DE](t)), line = 2.25, cex.lab = 1.1)
for(j in 2:11){
now_col[j] = getcolor(now_gamma[j])
lines(now_effect[[j]]$time/365.25, now_effect[[j]]$effect, type = 's', col = now_col[j])
}
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(gamma), ncol = 2)
now_col = rep(0, 11)
now_gamma = result$IE$sensitivity_analysis[[i]]$gamma
now_effect = result$IE$sensitivity_analysis[[i]]$effect
now_col[1] = getcolor(now_gamma[1])
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(-0.05, 0.15), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n indirect effect"))
title(xlab = "Time (years)", ylab = expression(Delta[DE](t)), line = 2.25, cex.lab = 1.1)
for(j in 2:11){
now_col[j] = getcolor(now_gamma[j])
lines(now_effect[[j]]$time/365.25, now_effect[[j]]$effect, type = 's', col = now_col[j])
}
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(gamma), ncol = 2)
abline(h = 0)
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(0, 0.15), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n indirect effect"))
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(0, 0.2), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n indirect effect"))
now_col = rep(0, 11)
now_gamma = result$IE$sensitivity_analysis[[i]]$gamma
now_effect = result$IE$sensitivity_analysis[[i]]$effect
now_col[1] = getcolor(now_gamma[1])
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(0, 0.2), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n indirect effect"))
title(xlab = "Time (years)", ylab = expression(Delta[DE](t)), line = 2.25, cex.lab = 1.1)
for(j in 2:11){
now_col[j] = getcolor(now_gamma[j])
lines(now_effect[[j]]$time/365.25, now_effect[[j]]$effect, type = 's', col = now_col[j])
}
abline(h = 0)
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(gamma), ncol = 2)
now_gamma[1]
(now_gamma[1] == 1)
lwd = 1 + (now_gamma[1] == 1)
lwd
now_col = rep(0, 11)
now_gamma = result$DE$sensitivity_analysis[[i]]$gamma
now_effect = result$DE$sensitivity_analysis[[i]]$effect
now_col[1] = getcolor(now_gamma[1])
lwd = 1 + (now_gamma[1] == 1)
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(-0.05, 0.15), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n direct effect"), lwd = lwd)
title(xlab = "Time (years)", ylab = expression(Delta[DE](t)), line = 2.25, cex.lab = 1.1)
for(j in 2:11){
now_col[j] = getcolor(now_gamma[j])
lwd = 1 + (now_gamma[j] == 1)
lines(now_effect[[j]]$time/365.25, now_effect[[j]]$effect, type = 's', col = now_col[j], lwd = lwd)
}
abline(h = 0)
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(gamma), ncol = 2)
now_col = rep(0, 11)
now_gamma = result$IE$sensitivity_analysis[[i]]$gamma
now_effect = result$IE$sensitivity_analysis[[i]]$effect
now_col[1] = getcolor(now_gamma[1])
lwd = 1 + (now_gamma[1] == 0)
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(0, 0.2), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n indirect effect"), lwd = lwd)
title(xlab = "Time (years)", ylab = expression(Delta[DE](t)), line = 2.25, cex.lab = 1.1)
for(j in 2:11){
now_col[j] = getcolor(now_gamma[j])
lwd = 1 + (now_gamma[j] == 0)
lines(now_effect[[j]]$time/365.25, now_effect[[j]]$effect, type = 's', col = now_col[j], lwd = lwd)
}
abline(h = 0)
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(gamma), ncol = 2)
now_col = rep(0, 11)
now_gamma = result$DE$sensitivity_analysis[[i]]$gamma
now_effect = result$DE$sensitivity_analysis[[i]]$effect
now_col[1] = getcolor(now_gamma[1])
lwd = 1 + (now_gamma[1] == 0)
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(-0.05, 0.15), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n direct effect"), lwd = lwd)
title(xlab = "Time (years)", ylab = expression(Delta[DE](t)), line = 2.25, cex.lab = 1.1)
for(j in 2:11){
now_col[j] = getcolor(now_gamma[j])
lwd = 1 + (now_gamma[j] == 0)
lines(now_effect[[j]]$time/365.25, now_effect[[j]]$effect, type = 's', col = now_col[j], lwd = lwd)
}
abline(h = 0)
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(gamma), ncol = 2)
width = 600
height = 600
now_col = rep(0, 11)
now_gamma = result$DE$sensitivity_analysis[[i]]$gamma
now_effect = result$DE$sensitivity_analysis[[i]]$effect
now_col[1] = getcolor(now_gamma[1])
lwd = 1 + (now_gamma[1] == 0)
png(file = paste("/Users/js/Desktop/CHH2020/DE_", i, sep = ''), width = width, height = height)
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(-0.05, 0.15), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n direct effect"), lwd = lwd)
title(xlab = "Time (years)", ylab = expression(Delta[DE](t)), line = 2.25, cex.lab = 1.1)
for(j in 2:11){
now_col[j] = getcolor(now_gamma[j])
lwd = 1 + (now_gamma[j] == 0)
lines(now_effect[[j]]$time/365.25, now_effect[[j]]$effect, type = 's', col = now_col[j], lwd = lwd)
}
abline(h = 0)
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(gamma), ncol = 2)
dev.off()
width = 400
width = 400
width = 400
height = 400
now_col = rep(0, 11)
now_gamma = result$DE$sensitivity_analysis[[i]]$gamma
now_effect = result$DE$sensitivity_analysis[[i]]$effect
now_col[1] = getcolor(now_gamma[1])
lwd = 1 + (now_gamma[1] == 0)
png(file = paste("/Users/js/Desktop/CHH2020/DE_", i, sep = ''), width = width, height = height)
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(-0.05, 0.15), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n direct effect"), lwd = lwd)
title(xlab = "Time (years)", ylab = expression(Delta[DE](t)), line = 2.25, cex.lab = 1.1)
for(j in 2:11){
now_col[j] = getcolor(now_gamma[j])
lwd = 1 + (now_gamma[j] == 0)
lines(now_effect[[j]]$time/365.25, now_effect[[j]]$effect, type = 's', col = now_col[j], lwd = lwd)
}
abline(h = 0)
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(gamma), ncol = 2)
dev.off()
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(-0.05, 0.15), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n direct effect"), lwd = lwd, cex.main = 1.5)
title(xlab = "Time (years)", ylab = expression(Delta[DE](t)), line = 2.25, cex.lab = 1.5)
now_col = rep(0, 11)
now_gamma = result$DE$sensitivity_analysis[[i]]$gamma
now_effect = result$DE$sensitivity_analysis[[i]]$effect
now_col[1] = getcolor(now_gamma[1])
lwd = 1 + (now_gamma[1] == 0)
png(file = paste("/Users/js/Desktop/CHH2020/DE_", i, sep = ''), width = width, height = height)
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(-0.05, 0.15), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n direct effect"), lwd = lwd, cex.main = 1.5)
title(xlab = "Time (years)", ylab = expression(Delta[DE](t)), line = 2.25, cex.lab = 1.5)
for(j in 2:11){
now_col[j] = getcolor(now_gamma[j])
lwd = 1 + (now_gamma[j] == 0)
lines(now_effect[[j]]$time/365.25, now_effect[[j]]$effect, type = 's', col = now_col[j], lwd = lwd)
}
abline(h = 0)
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(gamma), ncol = 2)
dev.off()
now_col = rep(0, 11)
now_gamma = result$DE$sensitivity_analysis[[i]]$gamma
now_effect = result$DE$sensitivity_analysis[[i]]$effect
now_col[1] = getcolor(now_gamma[1])
lwd = 1 + (now_gamma[1] == 0)
png(file = paste("/Users/js/Desktop/CHH2020/DE_", i, ".png",sep = ''), width = width, height = height)
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(-0.05, 0.15), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n direct effect"), lwd = lwd, cex.main = 1.5)
title(xlab = "Time (years)", ylab = expression(Delta[DE](t)), line = 2.25, cex.lab = 1.5)
for(j in 2:11){
now_col[j] = getcolor(now_gamma[j])
lwd = 1 + (now_gamma[j] == 0)
lines(now_effect[[j]]$time/365.25, now_effect[[j]]$effect, type = 's', col = now_col[j], lwd = lwd)
}
abline(h = 0)
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(gamma), ncol = 2)
dev.off()
now_col = rep(0, 11)
now_gamma = result$DE$sensitivity_analysis[[i]]$gamma
now_effect = result$DE$sensitivity_analysis[[i]]$effect
now_col[1] = getcolor(now_gamma[1])
lwd = 1 + (now_gamma[1] == 0)
png(file = paste("/Users/js/Desktop/CHH2020/DE_", i, ".png",sep = ''), width = width, height = height)
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(-0.05, 0.15), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n direct effect"), lwd = lwd, cex.main = 2)
title(xlab = "Time (years)", ylab = expression(Delta[DE](t)), line = 2.25, cex.lab = 1.5)
for(j in 2:11){
now_col[j] = getcolor(now_gamma[j])
lwd = 1 + (now_gamma[j] == 0)
lines(now_effect[[j]]$time/365.25, now_effect[[j]]$effect, type = 's', col = now_col[j], lwd = lwd)
}
abline(h = 0)
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(gamma), ncol = 2)
dev.off()
for(i in 1:5){
now_col = rep(0, 11)
now_gamma = result$DE$sensitivity_analysis[[i]]$gamma
now_effect = result$DE$sensitivity_analysis[[i]]$effect
now_col[1] = getcolor(now_gamma[1])
lwd = 1 + (now_gamma[1] == 0)
png(file = paste("/Users/js/Desktop/CHH2020/DE_", i, ".png", sep = ''), width = width, height = height)
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(-0.05, 0.15), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n direct effect"), lwd = lwd, cex.main = 2)
title(xlab = "Time (years)", ylab = expression(Delta[DE](t)), line = 2.25, cex.lab = 1.5)
for(j in 2:11){
now_col[j] = getcolor(now_gamma[j])
lwd = 1 + (now_gamma[j] == 0)
lines(now_effect[[j]]$time/365.25, now_effect[[j]]$effect, type = 's', col = now_col[j], lwd = lwd)
}
abline(h = 0)
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(gamma), ncol = 2)
dev.off()
now_col = rep(0, 11)
now_gamma = result$IE$sensitivity_analysis[[i]]$gamma
now_effect = result$IE$sensitivity_analysis[[i]]$effect
now_col[1] = getcolor(now_gamma[1])
lwd = 1 + (now_gamma[1] == 0)
png(file = paste("/Users/js/Desktop/CHH2020/IE_", i, ".png", sep = ''), width = width, height = height)
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(0, 0.2), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n indirect effect"), lwd = lwd, cex.main = 2)
title(xlab = "Time (years)", ylab = expression(Delta[DE](t)), line = 2.25, cex.lab = 1.5)
for(j in 2:11){
now_col[j] = getcolor(now_gamma[j])
lwd = 1 + (now_gamma[j] == 0)
lines(now_effect[[j]]$time/365.25, now_effect[[j]]$effect, type = 's', col = now_col[j], lwd = lwd)
}
abline(h = 0)
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(gamma), ncol = 2)
dev.off()
}
for(i in 1:5){
now_col = rep(0, 11)
now_gamma = result$DE$sensitivity_analysis[[i]]$gamma
now_effect = result$DE$sensitivity_analysis[[i]]$effect
now_col[1] = getcolor(now_gamma[1])
lwd = 1 + (now_gamma[1] == 0)
png(file = paste("/Users/js/Desktop/CHH2020/DE_", i, ".png", sep = ''), width = width, height = height)
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(-0.05, 0.15), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n direct effect"), lwd = lwd, cex.main = 2)
title(xlab = "Time (years)", ylab = expression(Delta[DE](t)), line = 2.25, cex.lab = 1.5)
for(j in 2:11){
now_col[j] = getcolor(now_gamma[j])
lwd = 1 + (now_gamma[j] == 0)
lines(now_effect[[j]]$time/365.25, now_effect[[j]]$effect, type = 's', col = now_col[j], lwd = lwd)
}
abline(h = 0)
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(gamma), ncol = 2)
dev.off()
now_col = rep(0, 11)
now_gamma = result$IE$sensitivity_analysis[[i]]$gamma
now_effect = result$IE$sensitivity_analysis[[i]]$effect
now_col[1] = getcolor(now_gamma[1])
lwd = 1 + (now_gamma[1] == 0)
png(file = paste("/Users/js/Desktop/CHH2020/IE_", i, ".png", sep = ''), width = width, height = height)
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(0, 0.2), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n indirect effect"), lwd = lwd, cex.main = 2)
title(xlab = "Time (years)", ylab = expression(Delta[IE](t)), line = 2.25, cex.lab = 1.5)
for(j in 2:11){
now_col[j] = getcolor(now_gamma[j])
lwd = 1 + (now_gamma[j] == 0)
lines(now_effect[[j]]$time/365.25, now_effect[[j]]$effect, type = 's', col = now_col[j], lwd = lwd)
}
abline(h = 0)
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(gamma), ncol = 2)
dev.off()
}
i = 3
now_col = rep(0, 11)
now_gamma = result$DE$sensitivity_analysis[[i]]$gamma
now_effect = result$DE$sensitivity_analysis[[i]]$effect
now_col[1] = getcolor(now_gamma[1])
lwd = 1 + (now_gamma[1] == 0)
png(file = paste("/Users/js/Desktop/CHH2020/DE_", i, ".png", sep = ''), width = width, height = height)
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(-0.05, 0.15), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n direct effect"), lwd = lwd, cex.main = 2)
title(xlab = "Time (years)", ylab = expression(Delta[DE](t)), line = 2.25, cex.lab = 1.5)
dev.off()
dev.off()
dev.off()
now_col = rep(0, 11)
now_gamma = result$DE$sensitivity_analysis[[i]]$gamma
now_effect = result$DE$sensitivity_analysis[[i]]$effect
now_col[1] = getcolor(now_gamma[1])
lwd = 1 + (now_gamma[1] == 0)
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(-0.05, 0.15), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n direct effect"), lwd = lwd, cex.main = 2)
title(xlab = "Time (years)", ylab = expression(Delta[DE](t)), line = 2.25, cex.lab = 1.5)
for(j in 2:11){
now_col[j] = getcolor(now_gamma[j])
lwd = 1 + (now_gamma[j] == 0)
lines(now_effect[[j]]$time/365.25, now_effect[[j]]$effect, type = 's', col = now_col[j], lwd = lwd)
}
abline(h = 0)
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(gamma), ncol = 2)
now_col = rep(0, 11)
now_gamma = result$IE$sensitivity_analysis[[i]]$gamma
now_effect = result$IE$sensitivity_analysis[[i]]$effect
now_col[1] = getcolor(now_gamma[1])
lwd = 1 + (now_gamma[1] == 0)
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(0, 0.2), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n indirect effect"), lwd = lwd, cex.main = 2)
now_effect[[1]]$effect
for(j in 2:11){
now_col[j] = getcolor(now_gamma[j])
lwd = 1 + (now_gamma[j] == 0)
lines(now_effect[[j]]$time/365.25, now_effect[[j]]$effect, type = 's', col = now_col[j], lwd = lwd)
}
now_effect[[10]]$effect - now_effect[[1]]$effect
for(i in 1:5){
now_col = rep(0, 11)
now_gamma = result$DE$sensitivity_analysis[[i]]$gamma
now_effect = result$DE$sensitivity_analysis[[i]]$effect
now_col[1] = getcolor(now_gamma[1])
lwd = 1 + (now_gamma[1] == 0)
png(file = paste("/Users/js/Desktop/CHH2020/DE_", i, ".png", sep = ''), width = width, height = height)
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(-0.05, 0.15), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n direct effect"), lwd = lwd, cex.main = 2)
title(xlab = "Time (years)", ylab = expression(Delta[DE](t)), line = 2.25, cex.lab = 1.5)
for(j in 2:11){
now_col[j] = getcolor(now_gamma[j])
lwd = 1 + (now_gamma[j] == 0)
lines(now_effect[[j]]$time/365.25, now_effect[[j]]$effect, type = 's', col = now_col[j], lwd = lwd)
}
abline(h = 0)
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(gamma), ncol = 2)
dev.off()
now_col = rep(0, 11)
now_gamma = result$IE$sensitivity_analysis[[i]]$gamma
now_effect = result$IE$sensitivity_analysis[[i]]$effect
now_col[1] = getcolor(now_gamma[1])
lwd = 1 + (now_gamma[1] == 0)
png(file = paste("/Users/js/Desktop/CHH2020/IE_", i, ".png", sep = ''), width = width, height = height)
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(0, 0.2), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n indirect effect"), lwd = lwd, cex.main = 2)
title(xlab = "Time (years)", ylab = expression(Delta[IE](t)), line = 2.25, cex.lab = 1.5)
for(j in 2:11){
now_col[j] = getcolor(now_gamma[j])
lwd = 1 + (now_gamma[j] == 0)
lines(now_effect[[j]]$time/365.25, now_effect[[j]]$effect, type = 's', col = now_col[j], lwd = lwd)
}
abline(h = 0)
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(gamma), ncol = 2)
dev.off()
}
devtools::install()
remove.packages("CausalAnalysisforSemiCompRisks")
devtools::install_github("JuShengHong/CausalAnalysisforSemiCompRisks")
result = CHH2020(REVEAL_HBV, get_variance = NULL, sen_ana = T)
width = 400
height = 400
for(i in 1:5){
now_col = rep(0, 11)
now_gamma = result$DE$sensitivity_analysis[[i]]$gamma
now_effect = result$DE$sensitivity_analysis[[i]]$effect
now_col[1] = getcolor(now_gamma[1])
lwd = 1 + (now_gamma[1] == 0)
png(file = paste("/Users/js/Desktop/CHH2020/DE_", i, ".png", sep = ''), width = width, height = height)
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(-0.05, 0.15), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n direct effect"), lwd = lwd, cex.main = 2)
title(xlab = "Time (years)", ylab = expression(Delta[DE](t)), line = 2.25, cex.lab = 1.5)
for(j in 2:11){
now_col[j] = getcolor(now_gamma[j])
lwd = 1 + (now_gamma[j] == 0)
lines(now_effect[[j]]$time/365.25, now_effect[[j]]$effect, type = 's', col = now_col[j], lwd = lwd)
}
abline(h = 0)
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(gamma), ncol = 2)
dev.off()
now_col = rep(0, 11)
now_gamma = result$IE$sensitivity_analysis[[i]]$gamma
now_effect = result$IE$sensitivity_analysis[[i]]$effect
now_col[1] = getcolor(now_gamma[1])
lwd = 1 + (now_gamma[1] == 0)
png(file = paste("/Users/js/Desktop/CHH2020/IE_", i, ".png", sep = ''), width = width, height = height)
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(0, 0.2), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n indirect effect"), lwd = lwd, cex.main = 2)
title(xlab = "Time (years)", ylab = expression(Delta[IE](t)), line = 2.25, cex.lab = 1.5)
for(j in 2:11){
now_col[j] = getcolor(now_gamma[j])
lwd = 1 + (now_gamma[j] == 0)
lines(now_effect[[j]]$time/365.25, now_effect[[j]]$effect, type = 's', col = now_col[j], lwd = lwd)
}
abline(h = 0)
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(gamma), ncol = 2)
dev.off()
}
plot_sen_ana(result)
plot_sen_ana = function(result){
width = 400
height = 400
for(i in 1:5){
now_col = rep(0, 11)
now_gamma = result$DE$sensitivity_analysis[[i]]$gamma
now_effect = result$DE$sensitivity_analysis[[i]]$effect
now_col[1] = getcolor(now_gamma[1])
lwd = 1 + (now_gamma[1] == 0)
# png(file = paste("/Users/js/Desktop/CHH2020/DE_", i, ".png", sep = ''), width = width, height = height)
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(-0.05, 0.15), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n direct effect"), lwd = lwd, cex.main = 2)
title(xlab = "Time (years)", ylab = expression(Delta[DE](t)), line = 2.25, cex.lab = 1.5)
for(j in 2:11){
now_col[j] = getcolor(now_gamma[j])
lwd = 1 + (now_gamma[j] == 0)
lines(now_effect[[j]]$time/365.25, now_effect[[j]]$effect, type = 's', col = now_col[j], lwd = lwd)
}
abline(h = 0)
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(gamma), ncol = 2)
# dev.off()
now_col = rep(0, 11)
now_gamma = result$IE$sensitivity_analysis[[i]]$gamma
now_effect = result$IE$sensitivity_analysis[[i]]$effect
now_col[1] = getcolor(now_gamma[1])
lwd = 1 + (now_gamma[1] == 0)
# png(file = paste("/Users/js/Desktop/CHH2020/IE_", i, ".png", sep = ''), width = width, height = height)
plot(now_effect[[1]]$time/365.25, now_effect[[1]]$effect, type = 's', ylim = c(0, 0.2), col = now_col[1], xlab = "", ylab = "",
main = paste("Sensitivity analysis, case", i, "\n indirect effect"), lwd = lwd, cex.main = 2)
title(xlab = "Time (years)", ylab = expression(Delta[IE](t)), line = 2.25, cex.lab = 1.5)
for(j in 2:11){
now_col[j] = getcolor(now_gamma[j])
lwd = 1 + (now_gamma[j] == 0)
lines(now_effect[[j]]$time/365.25, now_effect[[j]]$effect, type = 's', col = now_col[j], lwd = lwd)
}
abline(h = 0)
legend("topleft", legend = now_gamma, col = now_col, lty = 1, lwd = 2, title = expression(gamma), ncol = 2)
# dev.off()
}
}
getcolor = function(gamma){
if(gamma == 0){
return("#000000")
}else{
gamma255 = floor(abs(gamma) * 255)
gammacolor = toupper(as.hexmode(gamma255))
if(gamma <= 0){
return(paste("#0000", gammacolor, sep = ''))
}else{
return(paste("#", gammacolor, "0000", sep = ''))
}
}
}
plot_sen_ana(result)
devtools::document()
rm(list = ls())
devtools::document()
devtools::install()
remove.packages("CausalAnalysisforSemiCompRisks")
devtools::install_github("JuShengHong/CausalAnalysisforSemiCompRisks")
load(file = "data/REVEAL_HBV.rda")
result = CHH2020(REVEAL_HBV, get_variance = NULL, sen_ana = T)
library("CausalAnalysisforSemiCompRisks", lib.loc="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
load(file = "data/REVEAL_HBV.rda")
result = CHH2020(REVEAL_HBV, get_variance = NULL, sen_ana = T)
result = CHH2020(REVEAL_HBV, get_variance = NULL, sen_ana = T, plot_result = T)
devtools::install()
devtools::install_github("JuShengHong/CausalAnalysisforSemiCompRisks")
result = CHH2020(REVEAL_HBV, get_variance = 'a', sen_ana = T, plot_result = T)
result = CHH2020(REVEAL_HBV, downsample = 20, plot_result = T, get_variance = c('a', 'b1'))
result = CHH2020(REVEAL_HBV, downsample = 20, plot_result = T, get_variance = c('a', 'b1'))
simulation(1, 'null', repeat_size = 100)
load(file = "data/REVEAL_HBV.rda")
load(file = "REVEAL_HBV.rda")
load(file = "~/REVEAL_HBV.rda")
library(CausalAnalysisforSemiCompRisks)
devtools::install\_github("JuShengHong/CausalAnalysisforSemiCompRisks")
devtools::install_github("JuShengHong/CausalAnalysisforSemiCompRisks")
devtools::install()
remove.packages("CausalAnalysisforSemiCompRisks")
devtools::install()
devtools::document()
devtools::document()
devtools::install()
devtools::install()
devtools::install_github("JuShengHong/CausalAnalysisforSemiCompRisks")
library(CausalAnalysisforSemiCompRisks)
library(CausalAnalysisforSemiCompRisks)
result = CASCR(REVEAL_HBV, downsample = 20, plot_result = T, get_variance = c('a', 'b1'))
tic = proc.time()
result = CASCR(REVEAL_HBV, downsample = 60, plot_result = T, get_variance = c('a', 'b'))
print(proc.time() - tic)
?coxph
remove.packages("CausalAnalysisforSemiCompRisks")
devtools::install_github("eric40065/CausalAnalysisforSemiCompRisks")
library(CausalAnalysisforSemiCompRisks)
simulation(1, hypo = 'null', repeat_size = 100)
simulation(1, hypo = 'alter', repeat_size = 100, num_of_cores = 10)
simulation(2, 'null', sample_size = 1000, repeat_size = 100, get_variance = 'asymptotic')
simulation(2, 'null', sample_size = 1000, repeat_size = 5, get_variance = 'asymptotic')
result = CASCR(REVEAL_HBV, plot_result = T, get_variance = 'asymptotic')
result = CASCR(REVEAL_HBV, plot_result = T, get_variance = 'asymptotic', downsample = 5)
?CASCR
devtools::document()
devtools::install()
remove.packages("CausalAnalysisforSemiCompRisks")
devtools::install_github("eric40065/CausalAnalysisforSemiCompRisks")
library(CausalAnalysisforSemiCompRisks)
?CASCR
library(CausalAnalysisforSemiCompRisks)
?CASCR
library(CausalAnalysisforSemiCompRisks)
result = CASCR(REVEAL_HBV, sen_ana = T, get_variance = NULL)
